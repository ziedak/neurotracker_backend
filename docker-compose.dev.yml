version: "3.8"

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "8123:8123" # HTTP interface
      - "9000:9000" # Native TCP interface
    environment:
      - CLICKHOUSE_DB=neurotracker
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
  postgres:
    image: postgres:15-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: neurotracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: TEST
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/neurotracker
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=TEST
      - KC_HOSTNAME_STRICT=false
      - KC_HTTP_ENABLED=true
    command: start-dev
    depends_on:
      - postgres
  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - EVENT_PIPELINE_URL=http://event-pipeline:3001
      - AI_ENGINE_URL=http://prediction:3002
      - INTERVENTION_ENGINE_URL=http://intervention:3003
      - DATA_PLATFORM_URL=http://data:3004
    depends_on:
      - redis
      - event-pipeline
      - prediction
    volumes:
      - ./apps/api-gateway:/app
      - ./libs:/libs
      - /app/node_modules
    command: pnpm dev

  event-pipeline:
    build:
      context: .
      dockerfile: apps/event-pipeline/dockerfile
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./apps/event-pipeline:/app
      - ./libs:/libs
      - /app/node_modules
    command: pnpm dev

  prediction:
    build:
      context: .
      dockerfile: apps/prediction/dockerfile
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./apps/prediction:/app
      - ./libs:/libs
      - /app/node_modules
    command: pnpm dev

  prisma:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - /home/zied/workspace/backend/libs/database/prisma:/app/prisma
    command: sh -c "npm install -g prisma && npx prisma migrate dev --name init --schema=/app/prisma/schema.prisma && npx prisma generate --schema=/app/prisma/schema.prisma"
    environment:
      - DATABASE_URL=postgresql://postgres:TEST@postgres:5432/neurotracker
    depends_on:
      - postgres
      - redis
      - clickhouse
    restart: "no"

volumes:
  redis_data:
  clickhouse_data:
  clickhouse_logs:
  postgres_data:
  postgres_logs:
