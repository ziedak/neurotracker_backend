apiVersion: apps/v1
kind: Deployment
metadata:
  name: prediction
  labels:
    app: prediction
spec:
  replicas: 2
  selector:
    matchLabels:
      app: prediction
  template:
    metadata:
      labels:
        app: prediction
    spec:
      containers:
        - name: prediction
          image: { { .Values.prediction.image } }
          ports:
            - containerPort: 3001
          readinessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 10
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3001
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            requests:
              cpu: { { .Values.prediction.resources.requests.cpu } }
              memory: { { .Values.prediction.resources.requests.memory } }
            limits:
              cpu: { { .Values.prediction.resources.limits.cpu } }
              memory: { { .Values.prediction.resources.limits.memory } }
          envFrom:
            - configMapRef:
                name: prediction-config
            - secretRef:
                name: prediction-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: prediction
spec:
  selector:
    app: prediction
  ports:
    - protocol: TCP
      port: 3001
      targetPort: 3001
  type: ClusterIP
